import org.junit.jupiter.api.*;
import org.mockito.Mockito;

import java.io.IOException;

import static org.junit.jupiter.api.Assertions.*;
import static org.mockito.Mockito.*;

class HadoopStorageServiceTest {

    private HadoopStorageService hadoopStorageService;
    private HadoopService mockHadoopService;

    @BeforeEach
    void setUp () {
        mockHadoopService = Mockito.mock(HadoopService.class);
        hadoopStorageService = new HadoopStorageService(mockHadoopService);
    }

    @Test
    void uploadFileFromLocal_Success() throws IOException {
        String localPath = "/path/to/local/file";
        String hadoopOutputPath = "/path/to/hadoop/output";
        String expectedHadoopPath = "/expected/hadoop/path";

        when(mockHadoopService.uploadLargeFileWithOverwrite(anyString(), anyString(), anyBoolean()))
            .thenReturn(expectedHadoopPath);

        String hadoopPath = hadoopStorageService.uploadFileFromLocal(localPath, hadoopOutputPath, 100);

        verify(mockHadoopService, times(1)).uploadLargeFileWithOverwrite(localPath, hadoopOutputPath, true);
        assertEquals(expectedHadoopPath, hadoopPath);
    }

    @Test
    void uploadFileFromLocal_Error() {
        String localPath = "/path/to/local/file";
        String hadoopOutputPath = "/path/to/hadoop/output";

        when(mockHadoopService.uploadLargeFileWithOverwrite(anyString(), anyString(), anyBoolean()))
            .thenThrow(new RuntimeException("Test exception"));

        assertThrows(IOException.class, () ->
            hadoopStorageService.uploadFileFromLocal(localPath, hadoopOutputPath, 100));
    }

    @Test
    void getLinesCountInFile_Success() throws IOException {
        String hdfsFilePath = "/path/to/hdfs/file";
        int expectedLinesCount = 10;

        when(mockHadoopService.countLinesInFile(anyString()))
            .thenReturn(expectedLinesCount);

        int linesCount = hadoopStorageService.getLinesCountInFile(hdfsFilePath);

        verify(mockHadoopService, times(1)).countLinesInFile(hdfsFilePath);
        assertEquals(expectedLinesCount, linesCount);
    }

    @Test
    void getLinesCountInFile_Error() {
        String hdfsFilePath = "/path/to/hdfs/file";

        when(mockHadoopService.countLinesInFile(anyString()))
            .thenThrow(new RuntimeException("Test exception"));

        assertThrows(IOException.class, () ->
            hadoopStorageService.getLinesCountInFile(hdfsFilePath));
    }
}
