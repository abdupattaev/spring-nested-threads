import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.mockito.InjectMocks;
import org.mockito.Mock;
import org.mockito.MockitoAnnotations;
import com.fasterxml.jackson.databind.JsonNode;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.node.ArrayNode;
import static org.mockito.Mockito.*;

class FHFMarketPlaceAPIServiceTest {

    @Mock
    private LocalStorageService localStorageService;
    @Mock
    private ApiMetadataVo apiMetadataVo;
    @InjectMocks
    private FHFMarketPlaceAPIService fhfMarketPlaceAPIService;

    @BeforeEach
    void setUp() {
        MockitoAnnotations.openMocks(this);
    }

    @Test
    void testConvertResponseAndSaveToLocal() throws Exception {
        ObjectMapper objectMapper = new ObjectMapper();
        ArrayNode arrayNode = objectMapper.createArrayNode();
        String apiResponse = "[{\"field1\": \"value1\"}]";
        String rspXpath = "/response/data";
        Integer trackId = 1;
        String sourceEffectiveDate = "2023-06-26";
        String localfilePath = "/tmp/localFilePath";

        when(apiMetadataVo.getApiAttrbs()).thenReturn("{\"rspXpath\":\"/response/data\"}");
        doNothing().when(localStorageService).storePageDataWithOverwrite(any(ArrayNode.class), eq(localfilePath), eq(trackId), eq(true));

        fhfMarketPlaceAPIService.convertResponseAndSaveToLocal(apiResponse, apiMetadataVo, localfilePath, trackId, sourceEffectiveDate);
        verify(localStorageService, times(1)).storePageDataWithOverwrite(arrayNode, localfilePath, trackId, true);
    }
}
