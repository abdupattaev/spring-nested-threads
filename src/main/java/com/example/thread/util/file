import org.junit.jupiter.api.*;
import org.junit.jupiter.api.io.TempDir;

import java.nio.file.*;
import java.util.Arrays;
import java.util.List;
import java.io.IOException;

import static org.junit.jupiter.api.Assertions.*;

class LocalStorageServiceTest {
    private LocalStorageService localStorageService;
    private List<String> tempFilesPaths;
    private String outputPath;

    @BeforeEach
    void setUp (@TempDir Path tempDir) {
        localStorageService = new LocalStorageService();

        tempFilesPaths = Arrays.asList(
            tempDir.resolve("temp1.csv").toString(),
            tempDir.resolve("temp2.csv").toString()
        );

        outputPath = tempDir.resolve("output.csv").toString();
    }

    @Test
    void combineTemporaryFiles_Success() throws IOException {
        String data1 = "field1,field2\nval1,val2\n";
        String data2 = "field1,field2\nval3,val4\n";

        // Write data to temporary files
        Files.writeString(Path.of(tempFilesPaths.get(0)), data1);
        Files.writeString(Path.of(tempFilesPaths.get(1)), data2);

        localStorageService.combineTemporaryFiles(tempFilesPaths, outputPath, 100);

        String content = Files.readString(Path.of(outputPath));
        String expectedContent = "field1,field2\nval1,val2\nval3,val4\n";

        assertEquals(expectedContent, content);
    }

    @Test
    void combineTemporaryFiles_NoSuchFile() {
        // Here we are testing if it throws exception when file not found
        String nonExistentPath = "/path/to/nonexistent/file.csv";
        List<String> nonExistentPaths = Arrays.asList(nonExistentPath);

        assertThrows(IOException.class, () ->
            localStorageService.combineTemporaryFiles(nonExistentPaths, outputPath, 100));
    }
}
