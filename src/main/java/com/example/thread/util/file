@Test
void invokeEndpoint_Paginated_Success() throws Exception {
    int trackId = 100;
    ApiMetadataVo apiMetadataVo = new ApiMetadataVo();
    EndpointResponseData endpointResponseData;
    String expectedData = "{\"pagination\": {\"total_pages\": 10, \"total_results\": 50}}";
    when(apiCallServiceClient.fetchSinglePageData(anyInt(), anyInt(), any(ApiMetadataVo.class), anyInt())).thenReturn(expectedData);

    endpointResponseData = apiCallServiceClient.invokeEndpoint(trackId, apiMetadataVo);

    assertEquals(expectedData, endpointResponseData.getResponseData());
    assertEquals(10, endpointResponseData.getTotalPages());
    assertEquals(50, endpointResponseData.getTotalRecords());
}

@Test
void invokeEndpoint_NonPaginated_Success() throws Exception {
    int trackId = 100;
    ApiMetadataVo apiMetadataVo = new ApiMetadataVo();
    EndpointResponseData endpointResponseData;
    String expectedData = "{\"key\": \"value\"}";
    when(apiCallServiceClient.fetchSinglePageData(any(ApiMetadataVo.class), anyInt())).thenReturn(expectedData);

    endpointResponseData = apiCallServiceClient.invokeEndpoint(trackId, apiMetadataVo);

    assertEquals(expectedData, endpointResponseData.getResponseData());
    assertEquals(1, endpointResponseData.getTotalPages());
}

@Test
void invokeEndpoint_Exception() throws Exception {
    int trackId = 100;
    ApiMetadataVo apiMetadataVo = new ApiMetadataVo();

    when(apiCallServiceClient.fetchSinglePageData(any(ApiMetadataVo.class), anyInt()))
        .thenThrow(new RuntimeException("Test Exception"));

    assertThrows(RegReportingServiceException.class, () ->
        apiCallServiceClient.invokeEndpoint(trackId, apiMetadataVo));
}
